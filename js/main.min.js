function formatDate(date){if(!(date instanceof Date)||isNaN(date)){console.warn("formatDate received an invalid date:",date);date=new Date()}const day=date.getDate();let suffix='th';if(day%10===1&&day!==11)suffix='st';else if(day%10===2&&day!==12)suffix='nd';else if(day%10===3&&day!==13)suffix='rd';const month=date.toLocaleDateString('en-US',{month:'long'});const year=date.getFullYear();return`${day}${suffix} ${month} ${year}`}
async function loadMarkdownContent(file,targetElementId,renderMath=false,highlightCode=false){const targetElement=document.getElementById(targetElementId);if(!targetElement){console.error(`Target element with ID "${targetElementId}" not found.`);return}targetElement.innerHTML='<p>Loading...</p>';try{if(typeof marked==='undefined'||typeof marked.parse!=='function'){throw new Error('Markdown rendering library (marked.js) is not loaded or not ready.')}const response=await fetch(file);if(!response.ok){throw new Error(`HTTP error! Status: ${response.status} while fetching ${file}`)}const markdown=await response.text();targetElement.innerHTML=marked.parse(markdown,{mangle:false,headerIds:false});if(renderMath){if(typeof renderMathInElement==='function'){try{renderMathInElement(targetElement,{delimiters:[{left:"$$",right:"$$",display:true},{left:"$",right:"$",display:false}],throwOnError:false})}catch(mathError){console.error("KaTeX rendering failed:",mathError)}}else{console.warn('KaTeX (renderMathInElement) function not found, cannot render math.')}}if(highlightCode){if(typeof Prism!=='undefined'&&typeof Prism.highlightAllUnder==='function'){try{Prism.highlightAllUnder(targetElement)}catch(codeError){console.error("Prism highlighting failed:",codeError)}}else{console.warn('Prism (highlightAllUnder function) not found, cannot highlight code.')}}}catch(error){console.error(`Error loading or processing markdown file ${file}:`,error);targetElement.innerHTML=`<p style="color: red;">Error loading content from ${file}: ${error.message}. Please check the file path and network connection.</p>`}}
function parseFrontmatter(markdownText){const frontmatterRegex=/^---\s*[\r\n]([\s\S]*?)[\r\n]---\s*[\r\n]([\s\S]*)$/;const match=markdownText.match(frontmatterRegex);if(!match){return{metadata:{},content:markdownText}}const frontmatterBlock=match[1];const content=match[2]||'';const metadata={};frontmatterBlock.split(/[\r\n]+/).forEach(line=>{const parts=line.match(/^([^:]+):\s*(.*)$/);if(parts){const key=parts[1].trim();let value=parts[2].trim();if(value.startsWith('[')&&value.endsWith(']')){try{value=JSON.parse(value.replace(/'/g,'"'))}catch(e){console.warn(`Could not parse array for key "${key}": ${value}. Keeping as string. Error: ${e.message}`)}}else if(value.startsWith('"')&&value.endsWith('"')){value=value.substring(1,value.length-1)}else if(value.startsWith("'")&&value.endsWith("'")){value=value.substring(1,value.length-1)}else if(!isNaN(value)&&value.trim()!==''){if(String(Number(value))===value){value=Number(value)}}else if(value==='true'){value=true}else if(value==='false'){value=false}metadata[key]=value}});if(!metadata.author){metadata.author="Srinivas Raghav V C"}return{metadata,content}}
async function fetchAllPostMetadata(postFilesArray){const allMetadata=[];for(const filePath of postFilesArray){try{const response=await fetch(filePath);if(!response.ok){console.warn(`Could not fetch ${filePath}. Status: ${response.status}`);allMetadata.push({title:`Error loading: ${filePath.split('/').pop()}`,slug:filePath.split('/').pop().replace('.md',''),date:'N/A',summary:`Failed to load content for this post.`,error:true});continue}const markdownText=await response.text();const{metadata,content}=parseFrontmatter(markdownText);if(!metadata.slug){metadata.slug=filePath.split('/').pop().replace('.md','')}metadata.contentLength=content.length;metadata.filePath=filePath;allMetadata.push(metadata)}catch(error){console.error(`Error processing file ${filePath}:`,error);allMetadata.push({title:`Error processing: ${filePath.split('/').pop()}`,slug:filePath.split('/').pop().replace('.md',''),date:'N/A',summary:`Failed to parse metadata for this post.`,error:true,errorMessage:error.message})}}return allMetadata}
function displayBlogPosts(postsMetadataArray,containerId){const container=document.getElementById(containerId);if(!container){console.error(`Blog posts container with ID "${containerId}" not found.`);return}container.innerHTML='';if(!postsMetadataArray||postsMetadataArray.length===0){container.innerHTML='<p>No posts available at the moment. Check back soon!</p>';return}postsMetadataArray.sort((a,b)=>new Date(b.date)-new Date(a.date));postsMetadataArray.forEach(post=>{if(post.error){const errorPostElement=document.createElement('div');errorPostElement.className='blog-post-item blog-post-error';errorPostElement.innerHTML=`
                <h3>Error loading post: ${post.title||'Unknown Title'}</h3>
                <p>${post.summary||'Could not load details for this post.'}</p>
            `;container.appendChild(errorPostElement);return}const postElement=document.createElement('div');postElement.className='blog-post-item';let imageHtml='';if(post.image){imageHtml=`<img src="${post.image}" alt="${post.title}" class="blog-post-image">`}let formattedDate=post.date;if(typeof formatDate==='function'&&post.date&&!isNaN(new Date(post.date))){formattedDate=formatDate(new Date(post.date))}postElement.innerHTML=`
            ${imageHtml}
            <h3 class="blog-post-title"><a href="post.html?slug=${encodeURIComponent(post.slug)}">${post.title}</a></h3>
            <p class="blog-post-meta">By ${post.author||'Srinivas Raghav V C'} on ${formattedDate}</p>
            <p class="blog-post-summary">${post.summary||'No summary available.'}</p>
            <a href="post.html?slug=${encodeURIComponent(post.slug)}" class="read-more-link">Read more &rarr;</a>
        `;container.appendChild(postElement)})}
async function initBlogPage(){const blogPostFiles=['posts/essay_on_life.md','posts/poem.md'];const postsContainerId='blog-posts-container';const container=document.getElementById(postsContainerId);if(!container){return}container.innerHTML='<p>Loading posts, please wait...</p>';try{const postsMetadata=await fetchAllPostMetadata(blogPostFiles);displayBlogPosts(postsMetadata,postsContainerId)}catch(error){console.error("Error initializing blog page:",error);if(container)container.innerHTML='<p>Error loading blog posts. Please try again later.</p>'}}
async function loadBlogPost(){const contentElement=document.getElementById('content');const titleDisplayElement=document.getElementById('post-title-display');const dateDisplayElement=document.getElementById('post-date-display');const pageTitleElement=document.querySelector('title');if(!contentElement||!titleDisplayElement||!dateDisplayElement||!pageTitleElement){console.error('Required elements for displaying the post are not found on the page.');if(contentElement)contentElement.innerHTML='<p>Error: Post display elements missing. Cannot load post.</p>';return}const params=new URLSearchParams(window.location.search);const slug=params.get('slug');if(!slug){pageTitleElement.textContent='Error - Post Not Specified';titleDisplayElement.textContent='Post Not Found';dateDisplayElement.textContent='';contentElement.innerHTML='<p>Error: No post slug provided in the URL. Please select a post from the blog listing.</p>';return}const mdFilePath=`posts/${slug}.md`;try{const response=await fetch(mdFilePath);if(!response.ok){throw new Error(`HTTP error! Status: ${response.status} while fetching ${mdFilePath}`)}const markdownText=await response.text();const{metadata,content}=parseFrontmatter(markdownText);pageTitleElement.textContent=`${metadata.title||'Blog Post'} - Srinivas Raghav V C`;titleDisplayElement.textContent=metadata.title||'Untitled Post';if(metadata.date){dateDisplayElement.textContent=(typeof formatDate==='function'&&!isNaN(new Date(metadata.date)))?formatDate(new Date(metadata.date)):metadata.date}else{dateDisplayElement.textContent='Date not available'}if(typeof marked!=='undefined'&&typeof marked.parse==='function'){contentElement.innerHTML=marked.parse(content,{mangle:false,headerIds:false})}else{throw new Error('Markdown parser (marked.js) not available.')}if(typeof renderMathInElement==='function'){try{renderMathInElement(contentElement,{delimiters:[{left:"$$",right:"$$",display:true},{left:"$",right:"$",display:false}],throwOnError:false})}catch(mathError){console.error("KaTeX rendering failed for post content:",mathError)}}if(typeof Prism!=='undefined'&&typeof Prism.highlightAllUnder==='function'){try{Prism.highlightAllUnder(contentElement)}catch(codeError){console.error("Prism highlighting failed for post content:",codeError)}}}catch(error){console.error(`Error loading post "${slug}":`,error);pageTitleElement.textContent='Error Loading Post - Srinivas Raghav V C';titleDisplayElement.textContent='Error Loading Post';dateDisplayElement.textContent='';contentElement.innerHTML=`<p>Sorry, there was an error loading the post titled "${slug}". Please check the console for details or try returning to the blog. Error: ${error.message}</p>`}}
function initPostPage(){loadBlogPost()}
async function fetchGalleryData(jsonPath){try{const response=await fetch(jsonPath);if(!response.ok){throw new Error(`HTTP error! Status: ${response.status} while fetching ${jsonPath}`)}const data=await response.json();return data}catch(error){console.error("Error fetching gallery data:",error);return[]}}
function displayGalleryImages(imagesArray,containerId){const container=document.getElementById(containerId);if(!container){console.error(`Gallery container with ID "${containerId}" not found.`);return}container.innerHTML='';if(!imagesArray||imagesArray.length===0){container.innerHTML='<p>No images available in the gallery at the moment.</p>';return}imagesArray.forEach(image=>{const galleryItem=document.createElement('div');galleryItem.className='gallery-item';const imgElement=document.createElement('img');imgElement.src=image.path;imgElement.alt=image.caption||'Gallery image';const captionElement=document.createElement('figcaption');captionElement.className='gallery-caption';captionElement.textContent=image.caption;const dateElement=document.createElement('p');dateElement.className='gallery-image-date';dateElement.textContent=image.date?formatDate(new Date(image.date)):'';galleryItem.appendChild(imgElement);galleryItem.appendChild(captionElement);galleryItem.appendChild(dateElement);container.appendChild(galleryItem)})}
async function initGalleryPage(){const galleryContainerId='gallery-container';const container=document.getElementById(galleryContainerId);if(!container){return}container.innerHTML='<p>Loading images, please wait...</p>';const galleryDataPath='content/gallery_data.json';try{const imagesData=await fetchGalleryData(galleryDataPath);displayGalleryImages(imagesData,galleryContainerId)}catch(error){console.error("Error initializing gallery page:",error);if(container)container.innerHTML='<p>Error loading images. Please try again later.</p>'}}
function setupDarkModeToggle(){const toggleButton=document.getElementById('darkModeToggle');const body=document.body;const currentTheme=localStorage.getItem('theme');if(currentTheme==='dark'){body.classList.add('dark-mode')}else if(currentTheme==='light'){body.classList.remove('dark-mode')}else if(window.matchMedia&&window.matchMedia('(prefers-color-scheme: dark)').matches){body.classList.add('dark-mode')}if(toggleButton){toggleButton.addEventListener('click',()=>{body.classList.toggle('dark-mode');if(body.classList.contains('dark-mode')){localStorage.setItem('theme','dark')}else{localStorage.setItem('theme','light')}})}else{console.warn('Dark mode toggle button with id "darkModeToggle" not found.')}}
document.addEventListener('DOMContentLoaded',()=>{if(typeof setupDarkModeToggle==='function'){setupDarkModeToggle()}const dateElement=document.getElementById('current-date');if(dateElement&&typeof formatDate==='function'){dateElement.textContent=formatDate(new Date())}if(document.getElementById('blog-posts-container')){if(typeof initBlogPage==='function'){initBlogPage()}else{console.error('initBlogPage function not found for blog page.');const postsContainer=document.getElementById('blog-posts-container');if(postsContainer)postsContainer.innerHTML='<p>Error: Blog listing script not found.</p>'}}if(document.getElementById('post-title-display')){if(typeof initPostPage==='function'){initPostPage()}else{console.error('initPostPage function not found for post page.');const contentArea=document.getElementById('content');if(contentArea)contentArea.innerHTML='<p>Error: Post loading script not found.</p>'}}if(document.getElementById('gallery-container')){if(typeof initGalleryPage==='function'){initGalleryPage()}else{console.error('initGalleryPage function not found for gallery page.');const galleryContainer=document.getElementById('gallery-container');if(galleryContainer)galleryContainer.innerHTML='<p>Error: Gallery loading script not found.</p>'}}
console.log("--- Testing Frontmatter Parsing ---");const testMarkdownWithFrontmatter=`---
title: "Test Title"
date: "2024-01-01"
slug: "test-slug"
tags: ["test", "example"]
customField: true
---
This is the actual content.
`;const parsedResult=parseFrontmatter(testMarkdownWithFrontmatter);console.log("Parsed Frontmatter Result:",parsedResult);if(parsedResult.metadata.title==="Test Title"&&parsedResult.metadata.tags&&parsedResult.metadata.tags.length===2&&parsedResult.content.includes("actual content")){console.log("parseFrontmatter basic test: PASSED")}else{console.error("parseFrontmatter basic test: FAILED",parsedResult)}const testMarkdownWithoutFrontmatter="Just some content without frontmatter.";const parsedResultNoFM=parseFrontmatter(testMarkdownWithoutFrontmatter);console.log("Parsed No-Frontmatter Result:",parsedResultNoFM);if(Object.keys(parsedResultNoFM.metadata).length===1&&parsedResultNoFM.metadata.author==="Srinivas Raghav V C"&&parsedResultNoFM.content===testMarkdownWithoutFrontmatter){console.log("parseFrontmatter no-frontmatter test: PASSED")}else{console.error("parseFrontmatter no-frontmatter test: FAILED",parsedResultNoFM)}const testPostFiles=['posts/essay_on_life.md','posts/poem.md'];if(typeof fetchAllPostMetadata==='function'){console.log("Testing fetchAllPostMetadata with:",testPostFiles);fetchAllPostMetadata(testPostFiles).then(allMeta=>{console.log("fetchAllPostMetadata Result:",allMeta);if(allMeta&&allMeta.length===2){const essayMeta=allMeta.find(m=>m.slug==="essay-on-reflection-of-life");const poemMeta=allMeta.find(m=>m.slug==="poem-1-fighting-the-man-inside");if(essayMeta&&essayMeta.title==="An Essay on a Reflection of Life at This Point"&&poemMeta&&poemMeta.summary){console.log("fetchAllPostMetadata test: PASSED")}else{console.error("fetchAllPostMetadata test: FAILED - metadata content mismatch",allMeta)}}else{console.error("fetchAllPostMetadata test: FAILED - incorrect number of results",allMeta)}}).catch(err=>{console.error("fetchAllPostMetadata test: FAILED - error during fetch",err)})}else{console.error("fetchAllPostMetadata function not defined.")}console.log("--- End of Testing ---")});
